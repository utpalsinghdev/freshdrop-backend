generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
}

enum OrderType {
  SINGLE
  MEMBERSHIPED
}

enum TimeSlot {
  MORNING
  EVENING
}

enum EmployeeRole {
  DELIVERY
  ADMIN
  SUPERADMIN
}

model Otp {
  id        Int      @id @default(autoincrement())
  number    String   @unique
  otp       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id              Int         @id @default(autoincrement())
  name            String      @default("customer")
  number          String      @unique
  orders          Order[]     @relation("userOrders")
  bottles         Int         @default(0)
  balance         Int         @default(0)
  perBottleCharge Int         @default(25)
  address         String?
  membership      Membership?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Membership {
  id        Int      @id @default(autoincrement())
  name      String
  startDate DateTime
  duration  Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  Employee_id Int          @id @default(autoincrement())
  name        String
  number      String
  password    String
  email       String       @unique
  role        EmployeeRole
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  orders      Order[]      @relation("employeeOrders")
}

model Order {
  Order_id         Int           @id @default(autoincrement())
  number           String
  address          String
  deliveryDate     DateTime
  quantity         Int
  deliveryTimeSlot TimeSlot
  deliveryTime     DateTime?
  orderCost        Int?
  type             OrderType     @default(SINGLE)
  Orderstatus      OrderStatus   @default(PENDING)
  paymentStatus    PaymentStatus @default(PENDING)
  user             User          @relation("userOrders", fields: [userId], references: [id])
  userId           Int
  AuthorBy         Employee?     @relation("employeeOrders", fields: [AuthorBy_id], references: [Employee_id])
  AuthorBy_id      Int?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}
